{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPxTlQvpRMXMfuZ4qHao7L8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["### Tuples\n","* `tuples` are `hetrogeneous`, `seq` and `ordered` collection datatype.\n","* `tuples` are `immutable`\n","* `indexing & slicing` are possible on a tuple.\n","* a `tuple` is created by enclosing elements seperated by`,` within `( )` or we can also make use of `tuple()`\n","* an `empty tuple` is created by `()` or `tuple()`\n","* to create a `tuple of len 1` `(element, )`, `tuple(element)`\n","\n","<u><b>Note:</b></u> Even though a `tuple` is immutable, if a `tuple` has `a mutable object` as an element, we can still go ahead and `mutate` this `mutable object`"],"metadata":{"id":"MeX28VKqMpK_"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"quUaMlodKw2p","executionInfo":{"status":"ok","timestamp":1716480410436,"user_tz":-330,"elapsed":15,"user":{"displayName":"Mahender Reddy Narra","userId":"13952067207357597657"}},"outputId":"a3e5adf8-4a3c-442e-a7f5-b2da10cecfea"},"outputs":[{"output_type":"stream","name":"stdout","text":["() ()\n","<class 'tuple'> <class 'tuple'>\n","0 0\n"]}],"source":["# creating an empty tuple\n","a, b = (), tuple()\n","\n","print(a, b)\n","print(type(a), type(b))\n","print(len(a), len(b))"]},{"cell_type":"code","source":["# creating a tuple\n","a, b = (1, 2, 3), tuple('xyz')\n","\n","print(a, b)\n","print(type(a), type(b))\n","print(len(a), len(b))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jeSOLMItNFoX","executionInfo":{"status":"ok","timestamp":1716480423457,"user_tz":-330,"elapsed":10,"user":{"displayName":"Mahender Reddy Narra","userId":"13952067207357597657"}},"outputId":"979139e6-0ab0-43c1-c47f-a51c7a1b3789"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(1, 2, 3) ('x', 'y', 'z')\n","<class 'tuple'> <class 'tuple'>\n","3 3\n"]}]},{"cell_type":"code","source":["# creating a tuple\n","a, b = (1, 2, 3), tuple('xyz')\n","\n","print(a, b)\n","print(type(a), type(b))\n","print(len(a), len(b))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HftWBBy9NK4M","executionInfo":{"status":"ok","timestamp":1716480448730,"user_tz":-330,"elapsed":14,"user":{"displayName":"Mahender Reddy Narra","userId":"13952067207357597657"}},"outputId":"92a04ad8-5967-4fda-9f32-08d08d312879"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(1, 2, 3) ('x', 'y', 'z')\n","<class 'tuple'> <class 'tuple'>\n","3 3\n"]}]},{"cell_type":"markdown","source":["\n","#### indexing and slicing"],"metadata":{"id":"uMt_KfZgNWGi"}},{"cell_type":"code","source":["# indexing\n","m = tuple('ABRACADABRA'.lower())\n","m"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a6pZxWxbNRHs","executionInfo":{"status":"ok","timestamp":1716480491611,"user_tz":-330,"elapsed":14,"user":{"displayName":"Mahender Reddy Narra","userId":"13952067207357597657"}},"outputId":"e0cdaf5c-06ed-41b7-cb7a-0163f1e7b372"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('a', 'b', 'r', 'a', 'c', 'a', 'd', 'a', 'b', 'r', 'a')"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["m[0], m[-1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-zoWrFNLNbmo","executionInfo":{"status":"ok","timestamp":1716480505592,"user_tz":-330,"elapsed":524,"user":{"displayName":"Mahender Reddy Narra","userId":"13952067207357597657"}},"outputId":"5355bc1c-5ab0-4e5e-e4dc-2da05a03bd62"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('a', 'a')"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# slicing\n","print(m)\n","print(m[ : : ])\n","print(m[ : : 1])\n","print(m[ 0 : len(m) : 1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9RBKInPTNfAZ","executionInfo":{"status":"ok","timestamp":1716480516405,"user_tz":-330,"elapsed":16,"user":{"displayName":"Mahender Reddy Narra","userId":"13952067207357597657"}},"outputId":"8c4a3986-db08-4034-d4d8-d82a11f1c75c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["('a', 'b', 'r', 'a', 'c', 'a', 'd', 'a', 'b', 'r', 'a')\n","('a', 'b', 'r', 'a', 'c', 'a', 'd', 'a', 'b', 'r', 'a')\n","('a', 'b', 'r', 'a', 'c', 'a', 'd', 'a', 'b', 'r', 'a')\n","('a', 'b', 'r', 'a', 'c', 'a', 'd', 'a', 'b', 'r', 'a')\n"]}]},{"cell_type":"code","source":["print(m[ : : -1])\n","print(m[ -1 : -len(m)-1 : -1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LXNaPv7xNhzN","executionInfo":{"status":"ok","timestamp":1716480526311,"user_tz":-330,"elapsed":7,"user":{"displayName":"Mahender Reddy Narra","userId":"13952067207357597657"}},"outputId":"633590eb-804c-4ed0-ed6b-28f52a40ba2e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["('a', 'r', 'b', 'a', 'd', 'a', 'c', 'a', 'r', 'b', 'a')\n","('a', 'r', 'b', 'a', 'd', 'a', 'c', 'a', 'r', 'b', 'a')\n"]}]},{"cell_type":"markdown","source":["### Tuple Methods"],"metadata":{"id":"iwtFaAcpNnj5"}},{"cell_type":"code","source":["dir(m)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QqLlQE0eNkJG","executionInfo":{"status":"ok","timestamp":1716480556521,"user_tz":-330,"elapsed":6,"user":{"displayName":"Mahender Reddy Narra","userId":"13952067207357597657"}},"outputId":"3fcdbba5-164b-4148-bd91-8db9e0ab794b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['__add__',\n"," '__class__',\n"," '__class_getitem__',\n"," '__contains__',\n"," '__delattr__',\n"," '__dir__',\n"," '__doc__',\n"," '__eq__',\n"," '__format__',\n"," '__ge__',\n"," '__getattribute__',\n"," '__getitem__',\n"," '__getnewargs__',\n"," '__gt__',\n"," '__hash__',\n"," '__init__',\n"," '__init_subclass__',\n"," '__iter__',\n"," '__le__',\n"," '__len__',\n"," '__lt__',\n"," '__mul__',\n"," '__ne__',\n"," '__new__',\n"," '__reduce__',\n"," '__reduce_ex__',\n"," '__repr__',\n"," '__rmul__',\n"," '__setattr__',\n"," '__sizeof__',\n"," '__str__',\n"," '__subclasshook__',\n"," 'count',\n"," 'index']"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["len(dir(m))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mVTruuveNrl_","executionInfo":{"status":"ok","timestamp":1716480567769,"user_tz":-330,"elapsed":15,"user":{"displayName":"Mahender Reddy Narra","userId":"13952067207357597657"}},"outputId":"fd340f41-026d-45b5-fe26-bdf19d72e8d5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["34"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["* Python has two built-in methods that you can use on tuples.\n","* <b>count( )\t</b>Returns the number of times a specified value occurs in a tuple\n","* <b>index( )</b>\tSearches the tuple for a specified value and returns the position of where it was found"],"metadata":{"id":"7kPNR057OLMR"}},{"cell_type":"markdown","source":["#### count()\n","* The count() method returns the number of times a specified value appears in the tuple.\n","\n"],"metadata":{"id":"FiWmQXjaOf9o"}},{"cell_type":"code","source":["tuple1 = (1, 3, 7, 8, 7, 5, 4, 6, 8, 5)\n","\n","x = tuple1.count(5)\n","\n","print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sxecZkD0NuIU","executionInfo":{"status":"ok","timestamp":1716480840313,"user_tz":-330,"elapsed":15,"user":{"displayName":"Mahender Reddy Narra","userId":"13952067207357597657"}},"outputId":"0375ac93-78b9-4deb-89fd-c2ac48c9e66c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2\n"]}]},{"cell_type":"markdown","source":["### index()\n","* index()\tSearches the tuple for a specified value and returns the position of where it was found.\n","* The index( ) method finds the first occurrence of the specified value.\n","\n","* The index( ) method raises an exception if the value is not found.\n","\n"],"metadata":{"id":"xUL_58zLO1Xe"}},{"cell_type":"code","source":["tuple2 = (1, 3, 7, 8, 7, 5, 4, 6, 8, 5)\n","\n","x = tuple2.index(8)\n","\n","print(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EzfnGDVxOwvP","executionInfo":{"status":"ok","timestamp":1716480961430,"user_tz":-330,"elapsed":9,"user":{"displayName":"Mahender Reddy Narra","userId":"13952067207357597657"}},"outputId":"d0ac73aa-5a08-403b-a4e0-45e70dff0e68"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"6yG5b3bNPOOr"},"execution_count":null,"outputs":[]}]}